name: Create RAID WW2 mod release
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@main
    - name: Delete Existing Release
      uses: ame-yu/action-delete-latest-release@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Archive Mod
      run: |
         .\.github\7za.exe -tzip a ".\RAID-DynamicLocalization.zip" ".\RAID-DynamicLocalization"
      shell: powershell

    - name: Get XML info
      # see https://github.com/marketplace/actions/get-xml-info
      id: getxml
      uses: mavrosxristoforos/get-xml-info@2.0
      with:
        xml-file: './RAID-DynamicLocalization/supermod.xml'
        xpath: '//mod/@version'

    - name: Create Release
      # https://github.com/marketplace/actions/create-release
      id: create_release
      uses: ncipollo/release-action@v1.16.0
      with:
        allowUpdates: true
        tag: ${{ steps.getxml.outputs.info }}
        name: Release ${{ steps.getxml.outputs.info }}
        draft: false
        prerelease: false
        body: |
          This release zip is automatically updated on every push. You can ignore the "x commits behind" message.
    
    - name: Upload Mod Zip to Release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./RAID-DynamicLocalization.zip
        asset_name: RAID-DynamicLocalization.zip
        asset_content_type: application/zip

    
  

    - name: Update version number in meta file
      id: create_meta_file_v2
      run: |
        $(cat .\.github\meta.json).Replace("%VERSION%", ${{ steps.getxml.outputs }}) > ./meta.json
    - name: Upload meta file to Release
      id: upload-meta-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./meta.json
        asset_name: meta.json
        asset_content_type: application/json
