name: Create RAID WW2 mod release
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@main
    - name: Delete Existing Release
      uses: ame-yu/action-delete-latest-release@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Archive Mod
      run: |
         .\.github\7za.exe -tzip a ".\RAID-DynamicLocalization.zip" ".\RAID-DynamicLocalization"
      shell: powershell

    - name: Get XML info
      # see https://github.com/marketplace/actions/get-xml-info
      id: getxml
      uses: mavrosxristoforos/get-xml-info@2.0
      with:
        xml-file: './RAID-DynamicLocalization/supermod.xml'
        xpath: '//mod/@version'

    - name: Update version number in meta file
      id: create_meta_file_v2
      run: |
        $(cat .\.github\meta.json).Replace("%VERSION%", ${{ steps.getxml.outputs.info }}) > ./meta.json
    
    - name: GH Release
      # https://github.com/marketplace/actions/gh-release
      # You may pin to the exact commit or the version.
      # uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda
      id: upload-release-asset 
      uses: softprops/action-gh-release@v2.2.1
      with:
        # Note-worthy description of changes in release
        body: |
          This release zip is automatically updated on every push. You can ignore the "x commits behind" message.
        # Path to load note-worthy description of changes in release from
        body_path: CHANGELOG.md
        # Gives the release a custom name. Defaults to tag name
        name: Release ${{ steps.getxml.outputs.info }}
        # Gives a tag name. Defaults to github.GITHUB_REF
        tag_name: ${{ steps.getxml.outputs.info }}
        # Newline-delimited list of path globs for asset files to upload
        files: |
          RAID-DynamicLocalization.zip
          meta.json
        # Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be set as latest. Can be `true`, `false`, or `legacy`. Uses GitHub api default if not provided
        make_latest: legacy
  
